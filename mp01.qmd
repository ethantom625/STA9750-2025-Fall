---
title: "Mini-Project #01"
format: html
execute:
  echo: true
  warning: false
  error: false
---



```{r}
#| include: false
if (!dir.exists(file.path("data", "mp01"))) {
    dir.create(file.path("data", "mp01"), showWarnings = FALSE, recursive = TRUE)
}

GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.csv")

if (!file.exists(GLOBAL_TOP_10_FILENAME)) {
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv", 
                  destfile = GLOBAL_TOP_10_FILENAME)
}

COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.csv")

if (!file.exists(COUNTRY_TOP_10_FILENAME)) {
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv", 
                  destfile = COUNTRY_TOP_10_FILENAME)
}
```

```{r}
#| include: false
if (!require("tidyverse")) install.packages("tidyverse")
library(readr)
library(dplyr)

GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME)

str(GLOBAL_TOP_10)

GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
    mutate(season_title = if_else(season_title == "N/A", NA, season_title))

```

```{r}
#| include: false
library(DT)
GLOBAL_TOP_10 |> 
    head(n = 20) |>
    datatable(options = list(searching = FALSE, info = FALSE))

library(stringr)
format_titles <- function(df){
    colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
    df
}

GLOBAL_TOP_10 |> 
    format_titles() |>
    head(n = 20) |>
    datatable(options = list(searching = FALSE, info = FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

```{r}
#| echo: false
GLOBAL_TOP_10 |> 
    mutate(`runtime_(minutes)` = round(60 * runtime)) |>
    select(-season_title, 
           -runtime) |>
    format_titles() |>
    head(n = 20) |>
    datatable(options = list(searching = FALSE, info = FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))

```

```{r}
#| include: false
if (!require("tidyverse")) install.packages("tidyverse")
library(readr)
library(dplyr)

COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME)

str(COUNTRY_TOP_10)

glimpse(COUNTRY_TOP_10)

COUNTRY_TOP_10 <- COUNTRY_TOP_10 |>
    mutate(season_title = if_else(season_title == "N/A", NA, season_title))

glimpse(COUNTRY_TOP_10)
```

```{r}
#| echo: false
library(DT)
COUNTRY_TOP_10 |> 
    head(n = 20) |>
    datatable(options = list(searching = FALSE, info = FALSE))

library(stringr)
format_titles <- function(df){
    colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
    df
}
```








```{r}
#| echo: false
library(dplyr)

df <- COUNTRY_TOP_10


num_countries <- n_distinct(df$country_name)

```
### How many different countries does Netflix operate in?

There are `r num_countries` that Netflix operates in.

```{r}
#| echo: false
library(dplyr)
df <- GLOBAL_TOP_10 %>%
  filter(category == "Films (Non-English)") %>%
  slice_max(order_by = cumulative_weeks_in_top_10, n=1, with_ties = FALSE)
non_eng_film_title <- df %>%
  pull(show_title)
weeks_in_top_10 <- df %>%
  pull(cumulative_weeks_in_top_10)
```
### Which non-English-language film has spent the most cumulative weeks in the global top 10? How many weeks did it spend?
`r non_eng_film_title` spent the most cumulative weeks in the global top 10 with `r weeks_in_top_10` weeks.

```{r}
#| echo: false
library(dplyr)

film_non_eng <- GLOBAL_TOP_10 %>%
  filter(category == "Films (Non-English)") %>%
  slice_max(order_by = runtime, n = 1, with_ties = FALSE)
film_eng <- GLOBAL_TOP_10 %>%
  filter(category == "Films (English)") %>%
  slice_max(order_by = runtime, n = 1, with_ties = FALSE)

if(film_eng$runtime > film_non_eng$runtime)
  df <- film_eng
if(film_non_eng$runtime > film_eng$runtime)
  df <- film_non_eng

longest_film <- df %>%
  pull(show_title)
longest_runtime <- df %>%
  pull(runtime)
longest_runtime_minutes = round(longest_runtime * 60)
```
### What is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes?
`r longest_film` is the film with the longest run time with `r longest_runtime_minutes` minutes.

```{r}
#| echo: false
library(dplyr)

film_non_eng <- GLOBAL_TOP_10 %>%
  filter(category == "Films (Non-English)") %>%
  slice_max(order_by = weekly_hours_viewed, n = 1, with_ties = FALSE)
film_eng <- GLOBAL_TOP_10 %>%
  filter(category == "Films (English)") %>%
  slice_max(order_by = weekly_hours_viewed, n = 1, with_ties = FALSE)
show_non_eng <- GLOBAL_TOP_10 %>%
  filter(category == "TV (Non-English)") %>%
  slice_max(order_by = weekly_hours_viewed, n = 1, with_ties = FALSE)
show_eng <- GLOBAL_TOP_10 %>%
  filter(category == "TV (English)") %>%
  slice_max(order_by = weekly_hours_viewed, n = 1, with_ties = FALSE)

top_film_non_eng <- film_non_eng %>%
  pull(show_title)
top_film_eng <- film_eng %>%
  pull(show_title)
top_show_non_eng <- show_non_eng %>%
  pull(show_title)
top_show_eng <- show_eng %>%
  pull(show_title)

```
### For each of the four categories, what program has the most total hours of global viewership?
The titles with the most total hours of global viewership were, `r top_film_non_eng`(top English film), `r top_film_eng`(top Non-English film), `r top_show_non_eng`(Non-English TV Show), `r top_show_eng`(English TV Show).

```{r}
#| echo: false
library(dplyr)

tv <- COUNTRY_TOP_10 %>%
  filter(category == "TV") %>%
  slice_max(order_by = cumulative_weeks_in_top_10, n = 1, with_ties = FALSE)

title <- tv %>%
  pull(show_title)
country <- tv %>%
  pull(country_name)
length <- tv %>%
  pull(cumulative_weeks_in_top_10)
```
### Which TV show had the longest run in a countryâ€™s Top 10? How long was this run and in what country did it occur?
`r title` was the show with the longest run from `r country` with `r length` weeks in the Top 10.


```{r}
#| include: false
library(dplyr)

country_counts <- COUNTRY_TOP_10 %>%
  distinct(country_name, week) %>%   
  count(country_name, name = "occurrences")  


min_country <- country_counts %>%
  slice_min(order_by = occurrences, n = 1, with_ties = FALSE) %>%
  pull(country_name)

russia <- COUNTRY_TOP_10 %>%
  filter(country_name == "Russia")
russia_date <- russia %>%
  slice(1) %>%
  pull(week)

```
### Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?
`r min_country` is the one country with a service history of less than 200. They ceased operation in `r russia_date`.

```{r}
#| include: false
library(dplyr)
squid_game <- GLOBAL_TOP_10 %>%
  filter(category == "TV (Non-English)") %>%
  filter(show_title == "Squid Game")

squid_game

hours_watched <- squid_game %>%
  summarize(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) %>%
  pull(total_hours)

hours_watched <- format(hours_watched, big.mark = ",", scientific = FALSE)
```
### What is the total viewership of the TV show Squid Game? Note that there are three seasons total and we are looking for the total number of hours watched across all seasons.
The total viewership of the show Squid Game was `r hours_watched` hours throughout the three season run.

```{r}
#| include: false
library(dplyr)
library(lubridate)

red_notice <- GLOBAL_TOP_10 %>%
  filter(show_title == "Red Notice") %>%
  filter(year(week) == 2021)

red_notice_runtime <- 118

hours_watched <- red_notice %>%
  summarize(total_hours = sum(weekly_hours_viewed, na.rm = TRUE))

views <- round(hours_watched/red_notice_runtime)
views <- format(views, big.mark = ",", scientific = FALSE)
```
### The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021? Note that Netflix does not provide the weekly_views values that far back in the past, but you can compute it yourself using the total view time and the runtime.
The approximate view count for Red Notice in 2021 was `r views`.

```{r}
#| echo: false
library(dplyr)

library(dplyr)


num_one_films <- GLOBAL_TOP_10 %>%
  filter(category %in% c("Films (English)", "Films (Non-English)")) %>%
  filter(weekly_rank == 1) %>%
  select(show_title) %>%
  distinct()

all_entries <- GLOBAL_TOP_10 %>%
  filter(show_title %in% num_one_films$show_title,
         category %in% c("Films (English)", "Films (Non-English)"))


first_week <- all_entries %>%
  group_by(show_title) %>%
  arrange(week) %>%                  
  slice(1) %>%                       
  select(show_title, first_week_rank = weekly_rank)

all_entries_with_first <- all_entries %>%
  left_join(first_week, by = c("show_title"))


non_debut_num_one <- all_entries_with_first %>%
  filter(weekly_rank == 1 & first_week_rank > 1) %>%
  distinct(show_title, .keep_all = TRUE) %>%
  arrange(desc(week))

num_non_debut_num_one <- count(non_debut_num_one)

most_recent_non_debut <- non_debut_num_one %>%
  filter(week == max(week))

most_recent_non_debut_title <- most_recent_non_debut %>% pull(show_title)
```
### How many Films reached Number 1 in the US but did not originally debut there? That is, find films that first appeared on the Top 10 chart at, e.g., Number 4 but then became more popular and eventually hit Number 1? What is the most recent film to pull this off?
There were `r num_non_debut_num_one` films that did not originally debut at 1. The most recent film to pull this off was `r most_recent_non_debut_title`.

```{r}
#| echo: false
library(dplyr)

top_10_debut <- COUNTRY_TOP_10 %>%
  filter(category == "TV") %>%
  group_by(show_title, country_name, season_title) %>%  # group by show and country
  arrange(week) %>%                       # earliest week first
  slice(1) %>%                            # take only the first row (debut)
  select(show_title, country_name,season_title, debut_week = week, weekly_rank) %>%
  group_by(show_title, season_title, debut_week) %>%
  summarize(num_countries = n_distinct(country_name), .groups = "drop")%>%
  arrange(desc(num_countries)) %>%
  slice(1)
top_debut_title <- top_10_debut %>%
  pull(season_title)
num_countries <- top_10_debut %>%
  pull(num_countries)
```
### Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?
The show that hit the top 10 in the most countries in its debut week was `r top_debut_title` in `r num_countries` countries.

```{r}
#| include: false
library(dplyr)

stranger_things <- GLOBAL_TOP_10 %>%
  filter(show_title == "Stranger Things") %>%
  arrange(weekly_rank)

stranger_things

hours_watched <- stranger_things %>%
  summarize(total_hours = sum(weekly_hours_viewed, na.rm = TRUE)) %>%
  pull(total_hours)
hours_watched <- format(hours_watched, big.mark = ",", scientific = FALSE)

weeks_at_one <- stranger_things %>%
  filter(weekly_rank == 1) %>%
  summarize(total_weeks = sum(cumulative_weeks_in_top_10, na.rm = TRUE)) %>%
  pull(total_weeks)

weeks_in_top_10 <- stranger_things %>%
  summarize(total_weeks = sum(cumulative_weeks_in_top_10, na.rm = TRUE)) %>%
  pull(total_weeks)
```

## Stranger Things Season 5: Absolute Cinema!
Sitting in Netflix's top 10 for `r weeks_in_top_10` weeks, Stranger Things Season 4 left viewers on their feet! As Season 4 sat in the top spot of the weekly ranking for `r weeks_at_one` weeks we meet Eleven and the gang to take on everything that has lead them here. Accumulating `r hours_watched` hours watched over the span of the show's lifetime, the epic conclusion for the generational show that put Netflix show production on the map is bound to be the talk of the town. Do not miss out on being one of millions watching as Stranger Things wraps things up for good.

```{r}
#| include: false
library(dplyr)

india <- COUNTRY_TOP_10 %>%
  filter(country_name == "India")

india

```
## Netflix Growth in India
As the most populated country in the world, there is great opportunity for Netflix to grow greatly from growing business in India. As more media reaches India, there are more opportunities to benefit from the great spread of differing cultural arts and the consumption of local content. Many foreign shows and films are reaching into India's top 10, ranging from WWE Smackdown to Squid Games. Though there is plenty of foreign media, there is also plenty of domestic media that remains in the top 10 such as, The Great Indian Kapil Show. There is much growth to be had as the expansion of foreign media looms greatly bringing the global top 10 into India's perview.


```{r}
#| include: false

cumm_weeks_top <- GLOBAL_TOP_10 %>%
  arrange(desc(cumulative_weeks_in_top_10)) %>%
  filter(cumulative_weeks_in_top_10 > 20) 

cumm_weeks_top

cumm_weeks_top_count <- count(cumm_weeks_top)
film_count <- cumm_weeks_top %>%
    count(category %in% c("Films (English)", "Films (Non-English)"))

film_count
```
## Netflix: Built on the Binge
The binge factor for streaming is one that cannot be ignored. As we explore the data, we find that there is a larger grasp that television has as it pertains to the streaming time. This makes sense when viewing from a pure content quantity but it definitely follows when we look at the duration that content sits in the top 10. If we look at what content has cumulatively been in the top 10 for more than 20 weeks, we find that it the category the content belongs to tends to be TV. Of the 59 piece of content that share this criteria, only 8 are film and 51 are TV shows. Netflix and streaming in general is overwhelmingly contingent on the ability to binge the content being presented and TV shows tend to be the primary guide to that as weekly stream hours are boosted by the needed to complete a show's season over and over again.


